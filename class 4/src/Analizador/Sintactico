/*
 * Organización de Lenguajes y Compiladores 1 A
 * Aux. Emely García
 */

package Analizador;
import Errores.MiError;
import Errores.TipoError;

import java_cup.runtime.*;
import java.util.ArrayList;

parser code  
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
        AnalizadorLenguaje.errores.add(new MiError(s.left, s.right, TipoError.SINTACTICO, 
                "Se detectó un error sintáctico ("+s.value+")"));
        
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
        AnalizadorLenguaje.errores.add(new MiError(s.left, s.right, TipoError.SINTACTICO, 
                        "Se detectó un error sintáctico ("+s.value+")"));
    }  
:} 
terminal mas,menos,div,por;
terminal par1,par2, puntoycoma;

terminal String pr_mover, pr_a, pr_la, pr_hacia, pr_izquierda, pr_derecha, pr_abajo, pr_saludar;
terminal String entero,decimal,cadena;

non terminal INICIO;

//precedencia
precedence left mas,menos;
precedence left por,div;


start with INICIO;

INICIO ::= pr_mover;